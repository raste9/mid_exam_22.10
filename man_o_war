def fire_command(warship, index, damage):
    if 0 <= index < len(warship):
        warship[index] -= damage
        if warship[index] <= 0:
            return "You won! The enemy ship has sunken."
            exit()

def defend_command(pirate_ship, start_index, end_index, damage):
    if 0 <= start_index < len(pirate_ship) and 0 <= end_index < len(pirate_ship):
        for i in range(start_index, end_index + 1):
            pirate_ship[i] -= damage
            if pirate_ship[i] <= 0:
                print("You lost! The pirate ship has sunken.")
                exit()

def repair_command(pirate_ship, index, health, max_health):
    if 0 <= index < len(pirate_ship):
        pirate_ship[index] = min(pirate_ship[index] + health, max_health)

def status_command(pirate_ship, max_health):
    sections_to_repair = sum(1 for section in pirate_ship if section < 0.2 * max_health)
    print(f"{sections_to_repair} sections need repair.")


pirate_ship_status = list(map(int, input().split('>')))
warship_status = list(map(int, input().split(">")))
max_health = int(input())

while True:
    command = input()
    if command == "Retire":
        break

    tokens = command.split()
    action = tokens[0]

    if action == "Fire":
        index = int(tokens[1])
        damage = int(tokens[2])
        fire_command(warship_status, index, damage)

    elif action == "Defend":
        start_index = int(tokens[1])
        end_index = int(tokens[2])
        damage = int(tokens[3])
        defend_command(pirate_ship_status, start_index, end_index, damage)

    elif action == "Repair":
        index = int(tokens[1])
        health = int(tokens[2])
        repair_command(pirate_ship_status, index, health, max_health)

    elif action == "Status":
        status_command(pirate_ship_status, max_health)

print(f"Pirate ship status: {sum(pirate_ship_status)}")
print(f"Warship status: {sum(warship_status)}")

